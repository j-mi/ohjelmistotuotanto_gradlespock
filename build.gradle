/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.2.1/userguide/tutorial_groovy_projects.html
 */

// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'idea'
// Apply the application plugin to add support for building an application
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use the latest Groovy version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.4.12'

    // Use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile "cglib:cglib-nodep:3.2.5"
    testRuntime "net.bytebuddy:byte-buddy:1.6.5"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.5.1"    // allows mocking of classes without default constructor (together with CGLIB)
}

task hello {
    //println "Hello world"
    group "Testing"
    description "Simple hello world -method/task"
    doLast {
        println "Hello world"
    }
}

task toinen (dependsOn: "hello") {
    doLast {
        println "Again!"
    }
}

4.times { counter ->
    task "task$counter" {
        doLast {
            println "Running task $counter"
        }
    }
}

task0.dependsOn task2, task3

task fileOps {
    doLast {
        File exampleFile = file 'test.txt'
        println exampleFile.text
    }
}
//Taskeja voi muokata "lennosta". Esimerkiksi tässä task "toinen" ajetaan vain jos syötteenä ei tule propertyä skipToinen
//Esimerkiksi: gradle toinen -PskipToinen
toinen.onlyIf { !project.hasProperty('skipToinen') }

//Toinen esimerkki, taskin voi ottaa pois päältä ohjelmallisesti
hello.enabled = true
//hello.enabled = false

//Kolmas esimerkki, osiakin voi ylikirjoittaa/kumota
/*
fileOps.doLast {
    println "Yliajettu"
}
*/

// Define the main class for the application
mainClassName = 'App'

